tapply(USDA$VitaminC,USDA$HighCarb, summary,na.rm = TRUE)
mvt = read.csv("mvtWeek1 (1).csv")
summary(mvt)
head(mvt)
names(mvt)
max(mvt$ID)
str(mvt)
strptime(mvt$Date, "%m/%d/%y %H:%M")
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
summary(DateCOnvert)
summary(DateConvert)
str(DateConvert)
names(DateConvert)
mvt$Month = months(DateConvert)
mvt$Weekday=weekdays(DateConvert)
mvt$Date = DateConvert
table(mvt)
table(mvt$month)
str(mvt)
table(mvt$Month)
max(mvt$Month)
table(mvt$Weekday)
tapply(mvt$Month,mvt$Arrest,max,na.rm = TRUE )
tapply(mvt$Month,mvt$Arrest,summary,na.rm = TRUE )
tapply(mvt$Month,mvt$Arrest,mean,na.rm = TRUE )
str(mvt)
head(mvt)
tapply(mvt$Month,mvt$Arrest,min,na.rm = TRUE )
tapply(mvt$Month,mvt$Arrest,sum,na.rm = TRUE )
table(mvt$Month, mvt$Arrest)
hist(mvt$Date)
hist(mvt$Date,breaks =100)
hist(mvt$Date,breaks =10)
hist(mvt$Date,breaks =100)
?boxplot
boxplot(mvt$Date, mvt$Arrest)
boxplot(mvt$Arrest, mvt$Date)
boxplot( mvt$Date)
boxplot(mvt$Date, mvt$Arrest)
boxplot(mvt$Date)
boxplot(mvt$Date, mvt$Arrest)
boxplot(mvt$Date, mvt$Arrest)
?boxplot
boxplot(mvt$Arrest, mvt$Date)
table(mvt$Year, mvt$Arrest)
boxplot(mvt$Year, mvt$Arrest)
boxplot(mvt$Date, mvt$Arrest)
boxplot(mvt$Date)
boxplot(mvt$Date, mvt$Arrest)
cbind(table(mvt$))
str(mvt)
prop.table(mvt$Date)
prop.table(mvt$Date, mvt$Arrest)
table(mvt$Date, mvt$Arrest)
str(mvt)
prop.table(mvt$Arrest)
sum1 = sum(mvt$Arrest==TRUE, na.rm ==TRUE)
sum1 = sum(mvt$Arrest==TRUE, na.rm=TRUE)
sum1
sum2 = sum(mvt$Arrest==FALSE, na.rm=TRUE)
sum2
sum1/(sum1+sum2)
tapply(mvt$Year,mvt$Arrest,sum, na.rm=TRUE)
tapply(mvt$Arrest,mvt$Year,sum, na.rm=TRUE)
sum1 = sum(mvt$Arrest==TRUE,mvt$Year = 2001 na.rm=TRUE)
sum1 = sum(mvt$Arrest==TRUE,mvt$Year== 2001 na.rm=TRUE)
sum1 = sum(mvt$Arrest==TRUE,mvt$Year== "2001" na.rm=TRUE)
table(mvt$Year,mvt$Arrest)
prop.table(mvt,c(mvt$Year,mvt$Arrest))
prop.table(mvt$Year,mvt$Arrest)
prop.table(mvt$Year,mvt$Arrest)
m <- matrix(1:4, 2)
m
prop.table(m, 1)
prop.table(c(mvt$Year,mvt$Arrest),1)
prop.table(table(mvt$Year,mvt$Arrest))
table(mvt$Year,mvt$Arrest)
2152/(18517+2152)
550/(550+13542)
1212/(1212+13068)
prop.table(table(mvt$Year,mvt$Arrest),1)
prop.table(table(mvt$Year,mvt$Arrest),2)
prop.table(table(mvt$Year,mvt$Arrest),3)
prop.table(table(mvt$Year,mvt$Arrest),0)
prop.table(table(mvt$Year,mvt$Arrest),1)
prop.table(table(mvt$Year,mvt$Arrest))
table(mvt$Year,mvt$Arrest)
13542/(13542+550)
m
margin.table(m, 1)
margin.table(m, 2)
margin.table(c(mvt$Year,mvt$Arrest), 2)
margin.table(mvt$Year, 2)
margin.table(mvt, 2)
margin.(mvt$Year,mvt$Arrest)
margin.table(mvt$Year,mvt$Arrest)
margin.table(mvt,1)
table(mvt$LocationDescription)
sort(table(mvt$LocationDescription))
Top5 <-subset(mvt, mvt$LocationDescription=="STREET"|mvt$LocationDescription=="PARKING LOT/GARAGE(NON.RESID.)"|mvt$LocationDescription=="ALLEY"|mvt$LocationDescription=="GAS STATION" | mvt$LocationDescription=="DRIVEWAY - RESIDENTIAL" )
Top5
summary(Top5)
str(Top5)
table(Top5$LocationDescription)
Top5$LocationDescription = factor(Top5$LocationDescription)
table(Top5$LocationDescription)
Top5$LocationDescription
table(Top5$LocationDescription)
str(Top5)
table(Top5$LocationDescription, Top5$Arrest)
prop.table(table(Top5$LocationDescription,Top5$Arrest),1)
table(mvt$Year,mvt$Arrest)
table(mvtArrest,mvtYear)
table(mvt$Arrest,mvt$Year)
prop.table(table(mvt$Arrest,mvt$Year),1)
prop.table(table(mvt$Arrest,mvt$Year),2)
prop.table(table(Top5$LocationDescription,Top5$Arrest),1)
str(Top5)
prop.table(table(Top5$LocationDescription,Top5$Weekday),1)
IBM = read.csv("IBMStock.csv")
GE = read.csv("GEStock.csv")
ProcterGamble = read.csv("ProcterGambleStock.csv")
CocaCola = read.csv("CocaColaStock.csv")
Boeing = read.csv("BoeingStock.csv")
str(IBM)
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
str(IBM)
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
sort(IBM$Date)
mean(IBM$StockPrice)
min(GE$StockPrice)
summary(GE)
summary(IBM)
summary(CocaCola)
summary(Boeing)
sd(ProcterGamble$StockPrice)
plot(CocaCola$Date, CocoCola$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice,type="l")
plot(CocaCola$Date, CocaCola$StockPrice,type="l")
lines(ProcterGamble$Date,procterGamble$StockPrice)
lines(ProcterGamble$Date,ProcterGamble$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice,type="l",col="red")
lines(ProcterGamble$Date,ProcterGamble$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice,type="l",col="red")
lines(ProcterGamble$Date,ProcterGamble$StockPrice, col = "blue")
lines(ProcterGamble$Date,ProcterGamble$StockPrice, col = "blue", lty=2)
plot(CocaCola$Date, CocaCola$StockPrice,type="l",col="red")
lines(ProcterGamble$Date,ProcterGamble$StockPrice, col = "blue", lty=2)
abline(v=as.Date(c("2000-03-01")), lwd=2)
lines(ProcterGamble$Date,ProcterGamble$StockPrice, col = "blue", lty=2)
plot(CocaCola$Date, CocaCola$StockPrice,type="l",col="red")
lines(ProcterGamble$Date,ProcterGamble$StockPrice, col = "blue", lty=2)
abline(v=as.Date(c("2000-03-01")), lwd=2)
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(ProcterGamble$Date[301:432],ProcterGamble$StockPrice[301:432], col = "blue", lty=2)
lines(GE$Date[301:432],GE$StockPrice[301:432], col = "green", lty=3)
lines(IBM$Date[301:432],IBM$StockPrice[301:432], col = "purple", lty=4)
lines(IBM$Date[301:432],IBM$StockPrice[301:432], col = "purple", lty=2)
lines(Boeing$Date[301:432],Boeing$StockPrice[301:432], col = "orange", lty=5)
abline(v=as.Date(c("2000-03-01")), lwd=2)
abline(v=as.Date(c("1997-09-01")), lwd=2)
abline(v=as.Date(c("1997-11-30")), lwd=2)
abline(v=as.Date(c("2004-01-01")), lwd=2)
abline(v=as.Date(c("2005-12-31")), lwd=2)
tapply(IBM$StockPrice,months(IBM$Date),mean)
tapply(IBM$StockPrice,months(IBM$Date),mean, na.rm=TRUE)
mean(IBM$StockPrice)
sort(tapply(IBM$StockPrice,months(IBM$Date),mean, na.rm=TRUE))
tapply(GE$StockPrice,months(GE$Date),mean, na.rm=TRUE)
tapply(CocaCola$StockPrice,months(CocaCola$Date),mean, na.rm=TRUE)
CPS = read.csv("CPSData.csv")
str(CPS)
tapply(IBM$StockPrice,months(IBM$Date),mean)
table(CPS$Industry)
sort(table(CPS$Industry))
sort(table(CPS$Industry),na.rm=TRUE)
sort(table(CPS$State),na.rm=TRUE)
str(CPS)
sort(table(CPS$Citizenship),na.rm=TRUE)
prop.table(table(CPS$Citizenship),1)
prop.table(table(CPS$Citizenship),2)
prop.table(table(CPS$Citizenship,CPS$Region),2)
prop.table(table(CPS$Citizenship,CPS$State),1)
head(CPS)
116639+7073
123712+7590
123712/131302
head(CPS)
tapply(CPS$Race, CPS$Hispanic, summary, na.rm=true)
summary(CPS)
table(CPS$Region, is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Sex))
table(CPS$Region, is.na(CPS$Age))
table(CPS$Sex, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))
table(CPS$State, is.na(CPS$MetroAreaCode))
prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)),1)
prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)))
0.08129351/(0.8129351+0.15239676)
tapply(CPS$State, CPS$MetroAreaCode, mean)
tapply(CPS$State, CPS$MetroAreaCode, mean, na.rm=TRUE)
tapply(CPS$State, CPS$MetroAreaCode, mean, na.rm=False)
tapply(CPS$State, CPS$MetroAreaCode, mean, na.rm=TRUE)
tapply(CPS$State, CPS$MetroAreaCode, mean, na.rm=FALSE)
tapply(CPS$State, CPS$MetroAreaCode, mean, na.rm=FALSE)
tapply(CPS$MetroAreaCode,CPS$State, mean, na.rm=FALSE)
tapply(CPS$MetroAreaCode,CPS$State, mean, na.rm=TRUE)
tapply(CPS$State, CPS$MetroAreaCode, mean, na.rm=TRUE)
prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)))
prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)),1)
mean(CPS$MetroAreaCode)
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean, na.rm=TRUE)
mean(is.na(CPS$MetroAreaCode))
tapply(is.na(CPS$MetroAreaCode),CPS$State, mean)
tapply(CPS$State, CPS$MetroAreaCode, mean, na.rm=TRUE)
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)),1)
MetroAreaCode = read.csv("MetroAreaCodes.csv")
CountryMap = read.csv("CountryCodes.csv")
str(CountryMap)
CPS = merge(CPS, MetroAreaCode,by.x = "MetroAreaCode",by.y = "Code", all.x = TRUE)
str(CPS)
summary(CPS)
tapply(CPS$MetroArea, CPS$Hispanic, mean, na.rm=TRUE)
tapply(CPS$MetroArea, is.na(CPS$Hispanic), mean, na.rm=TRUE)
table(mvt$Arrest,mvt$Year)
550/(550+13542)
str(mvt)
table(Top5$LocationDescription,Top5$Arrest).
table(Top5$LocationDescription,Top5$Arrest)
prop.table(table(Top5$LocationDescription,Top5$Arrest),1)
sort(tapply(CPS$MetroArea, is.na(CPS$Hispanic), mean, na.rm=TRUE))
sort(tapply(CPS$MetroArea, is.na(CPS$Hispanic), colmeans, na.rm=TRUE))
sort(tapply(CPS$MetroArea, is.na(CPS$Hispanic), mean, na.rm=TRUE))
type(is.na(CPS$Hispanic))
str((CPS$MetroArea))
str((Top5$LocationDescription))
str((Top5$Arrest))
AP = read.csv("AnonymityPoll.csv")
str(AP)
ls()
str(CPS)
str(is.na(CPS$Hispanic))
str((CPS$MetroArea))
table(CPS$MetroArea)
str((CPS$MetroArea))
summary((CPS$MetroArea))
table(CPS$MetroArea, na.rm =TRUE)
table(is.na(CPS$MetroArea))
sort(table(CPS$MetroArea))
mean(c(TRUE, FALSE, TRUE, TRUE))
sort(tapply(CPS$MetroArea, mean(is.na(CPS$Hispanic)), na.rm=TRUE))
sort(tapply(CPS$MetroArea, is.na(CPS$Hispanic), mean, na.rm=TRUE))
str((CPS$MetroArea))
table(CPS$State , CPS$MetroAreaCode)
table(CPS$State , is.na(CPS$MetroAreaCode))
prop.table(table(CPS$State , is.na(CPS$MetroAreaCode)),1)
sort(prop.table(table(CPS$State , is.na(CPS$MetroAreaCode)),1))
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
str(CPS$MetroAreaCode)
summary(CPS$MetroAreaCode)
summary(CPS)
str(CPS)
table(CPS$State , is.na(CPS$MetroAreaCode))
prop.table(table(CPS$State , is.na(CPS$MetroAreaCode)))
prop.table(table(CPS$State , is.na(CPS$MetroAreaCode)),1)
table(CPS$State , is.na(CPS$MetroAreaCode))
tapply(table(CPS$State , is.na(CPS$MetroAreaCode), mean)
)
tapply(table(CPS$State , is.na(CPS$MetroAreaCode)), mean)
tapply(table(CPS$State , is.na(CPS$MetroAreaCode)), mean,1)
tapply(CPS$State , is.na(CPS$MetroAreaCode), mean,1)
table(CPS$State , is.na(CPS$MetroAreaCode))
prop.table(table(CPS$State , is.na(CPS$MetroAreaCode)),1)
tapply(CPS$State, is.na(CPS$MetroAreaCode),mean)
tapply(CPS$State, is.na(CPS$MetroAreaCode),mean, na.rm =TRUE)
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean, na.rm =TRUE)
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean)
sort(tapply(is.na(CPS$MetroAreaCode), CPS$State, mean))
sort(tapply(is.na(CPS$Hispanic), CPS$MetroArea, mean))
sort(tapply(is.na(CPS$Hispanic), CPS$MetroArea, mean, na.rm= TRUE)
)
sort(CPS$MetroArea,is.na(CPS$Hispanic) mean))
sort(CPS$MetroArea,is.na(CPS$Hispanic), mean))
sort(tapply(CPS$MetroArea,is.na(CPS$Hispanic), mean))
table(CPS$MetroArea, is.na(CPS$Hispanic))
sort(table(CPS$MetroArea, is.na(CPS$Hispanic)))
table(CPS$MetroArea, CPS$Hispanic,na.rm =TRUE)
table(CPS$MetroArea, CPS$Hispanic)
prop.table(table(CPS$MetroArea, CPS$Hispanic))
table(CPS$MetroArea, CPS$Hispanic)
summary(CPS$Hispanic)
summary(CPS$MetroArea)
summary(CPS$MetroArea)
table(CPS$MetroArea, CPS$Hispanic)
sort(tapply(is.na(CPS$Hispanic),CPS$MetroArea, mean))
(tapply(is.na(CPS$Hispanic),CPS$MetroArea, mean)
)
tapply(is.na(CPS$Hispanic),CPS$MetroArea, mean)
tapply(is.na(CPS$Hispanic),CPS$MetroArea, mean)
sort(tapply(CPS$Hispanic,CPS$MetroArea, mean))
tapply(CPS$MetroArea,CPS$Race=="Asian", mean)
tapply(CPS$Race=="Asian",CPS$MetroArea, mean)
sort(tapply(CPS$Race=="Asian",CPS$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm = TRUE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean))
str(CPS$Education == "No high school diploma")
summary(CPS$Education == "No high school diploma")
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm =TRUE))
str(CPS)
str(CPS$CountryOfBirthCode)
str(CountryMap)
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
str(CPS)
summary(CPS$Country)
table(CPS$Country)
sort(table(CPS$Country))
summary(CPS$Country)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm =TRUE))
sort(tapply(CPS$Country,CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", mean, na.rm =TRUE))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm =TRUE))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", is.na(CPS$Country), mean, na.rm =TRUE))
sort(tapply(CPS$Country = "India",CPS$MetroArea.na.rm = TRUE))
sort(tapply(CPS$Country = "India",CPS$MetroArea,na.rm = TRUE))
sort(tapply(CPS$Country =="India",CPS$MetroArea,na.rm = TRUE))
sort(tapply(CPS$MetroArea,CPS$Country =="India",na.rm = TRUE))
tapply(CPS$Country =="India",CPS$MetroArea,sum,na.rm = TRUE)
sort(tapply(CPS$Country =="India",CPS$MetroArea,sum,na.rm = TRUE))
sort(tapply(CPS$Country =="Brazil",CPS$MetroArea,sum,na.rm = TRUE))
sort(tapply(CPS$Country =="Somalia",CPS$MetroArea,sum,na.rm = TRUE))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", is.na(CPS$Country), mean, na.rm =TRUE))
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", is.na(CPS$Country), mean, na.rm =TRUE)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", is.na(CPS$Country!="United States"), mean, na.rm =TRUE)
tapply( is.na(CPS$Country),CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", mean, na.rm =TRUE)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country,na.r = TRUE)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country,na.rm = TRUE)
prop.table(table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country),1)
tapply( CPS$Country,CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", mean, na.rm =TRUE)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm =TRUE))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country!="United States", mean, na.rm =TRUE))
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country!="United States", mean, na.rm =TRUE)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country=="United States", mean, na.rm =TRUE)
tapply(CPS$Country=="United States",CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", mean, na.rm =TRUE)
tapply(CPS$Country!="United States",CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", mean, na.rm =TRUE)
table(CPS$Region=="United States")
sort(table(CPS$Region)) 
str(CPS)
sort(table(CPS$Citizenship)) 
prop.table(table(CPS$Citizenship),1) 
prop.table(table(CPS$Citizenship),2) 
prop.table(table(CPS$Citizenship)) 
sort(table(CPS$CountryOfBirthCode)) 
(table(CPS$CountryOfBirthCode) 
)
table(CPS$Citizenship) 
prop.table(table(CPS$Citizenship)) 
prop.table(table(CPS$Citizenship),1) 
prop.table(table(CPS$Citizenship)) 
table(CPS$CountryOfBirthCode) 
table(CPS$CountryOfBirthCode=="United States") 
sort(table(CPS$Citizenship)) 
str(CPS)
prop.table(table(CPS$Citizenship!="Non-Citizen")) 
summary(AP)
table(AP$Smartphone)
472+487+43
table(AP$Region,AP$State)
table(AP$State,AP$Region)
table(AP$State=="Colarodo",AP$Region)
table(AP$State,AP$Region=="Midwest")
summary(AP)
table(AP$Smartphone, AP$Internet.Use)
limited<- subset(AP, AP$Smartphone ==TRUE | AP$Internet.Use == TRUE)
limited
str(limited)
summary(limited)
table(limited$Info.On.Internet)
table(limited$Worry.About.Info)
tapply(limited$Worry.About.Info == 1, limited$Worry.About.Info == 0, mean)
tapply(limited$Worry.About.Info == 1, limited$Worry.About.Info == 0, mean,1)
404/386
404+386
tapply(limited$Worry.About.Info, limited$Worry.About.Info ==1,mean, na.rm=TRUE)
tapply(limited$Worry.About.Info, limited$Worry.About.Info ==TRUE,mean, na.rm=TRUE)
386/404
table(limited$Anonymity.Possible)
prop.table(table(limited$Anonymity.Possible),1)
prop.table(table(limited$Anonymity.Possible),2)
prop.table(table(limited$Anonymity.Possible))
prop.table(table(limited$Worry.About.Info))
prop.table(table(limited$Tried.Masking.Identity))
prop.table(table(limited$Privacy.Laws.Effective))
hist(limited$Age, limited$Info.On.Internet)
hist(limited$Age, limited$Info.On.Internet, breaks = 100)
hist(limited$Age, breaks = 100)
plot(limited$Age, limited$Info.On.Internet)
table(limited$Age,limited$Info.On.Internet)
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
plot(jitter(limited$Age), jitter(limited$Info.On.Internet))
tapply(limited$Info.On.Internet,limited$Smartphone==1,mean)
tapply(limited$Info.On.Internet,limited$Smartphone==1,mean,1)
tapply(limited$Info.On.Internet,limited$Smartphone==1,mean,na.rm==TRUE)
tapply(limited$Info.On.Internet,limited$Smartphone==1,mean,na.rm=TRUE)
tapply(limited$Tried.Masking.Identity,limited$Smartphone==1,mean,na.rm=TRUE)
 plot(limited$Age, limited$Info.On.Internet)
table(limited$Age, limited$Info.On.Internet)
table(limited$Age, limited$Info.On.Internet, na.rm=TRUE)
table(limited$Age, limited$Info.On.Internet)
table(is.na(limited$Age), is.na(limited$Info.On.Internet))
max(table(limited$Age, limited$Info.On.Internet))
able(Top5$LocationDescription, Top5$Arrest),
table(Top5$LocationDescription, Top5$Arrest),
table(Top5$LocationDescription, Top5$Arrest)
prop.table(table(Top5$LocationDescription, Top5$Arrest))
prop.table(table(Top5$LocationDescription, Top5$Arrest),1)
tapply(Top5$LocationDescription, Top5$Arrest, mean)
tapply(Top5$LocationDescription, is.na(Top5$Arrest), mean)
tapply(Top5$LocationDescription, is.na(Top5$Arrest), mean, na.rm=TRUE)
tapply(Top5$Arrest,Top5$LocationDescription, mean, na.rm=TRUE)
table(Top5Arrest==TRUE,Top5LocationDescription).
table(Top5Arrest==TRUE,Top5LocationDescription)
table(Top5$Arrest==TRUE,Top5$LocationDescription)
prop.table(table(Top5$Arrest==TRUE,Top5$LocationDescription))
prop.table(table(Top5$Arrest==TRUE,Top5$LocationDescription),2)
prop.table(table(Top5$Arrest==TRUE,Top5$LocationDescription),2)
prop.table(table(Top5$Arrest==TRUE,Top5$LocationDescription))
prop.table(table(Top5$Arrest==TRUE,Top5$LocationDescription),1)
prop.table(table(Top5$Arrest==TRUE,Top5$LocationDescription),2)
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
tapply(CPS$Country!="United States",CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", mean, na.rm =TRUE)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country!="United States", mean, na.rm =TRUE))
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country!="United States", mean, na.rm =TRUE))
tapply(CPS$Country!="United States",CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", mean, na.rm =TRUE)
prop.table(table(CPS$Citizenship!="Non-Citizen")) 
prop.table(table(CPS$Citizenship=="Non-Citizen")) 
which.max(table(subset(CPS,CPS$Country=="India"),CPS$MetroArea))
which.max(table(subset(CPS,CPS$Country=="India"),MetroArea))
subset(CPS,CPS$Country=="India")
table(subset(CPS,CPS$Country=="India"))
which.max(table(subset(CPS,CPS$Country=="India"),MetroArea))
which.max(table(subset(CPS,CPS$Country=="India"),CPS$MetroArea))
plot(top5$Arrest top5$LocationDescription,type="l")
plot(Top5$Arrest,Top5$LocationDescription,type="l")
str(Top5)
str(Top5$locationDescription)
str(Top5$LocationDescription)
summary(Top5$LocationDescription)
head(Top5$LocationDescription)
tail(Top5$LocationDescription)
ls
ls()
wine = read.csv("wine.csv")
str(wine)
summary(wine)
model1 = lm(Price ~ AGST, data=wine)
summary(model1)
model1$residuals
SSE = sum(model1$residuals^2)
SSE
model2 = lm(Price ~ AGST + HarvestRain)
model2 = lm(Price ~ AGST + HarvestRain, data = wine)
summary(model2)
SSE =  sum(model2$residuals^2)
SSE
model3 = lm(Price~ AGST+HarvestRain+WinterRain+Age+FrancePopulation, data = wine)
model3 = lm(Price~ AGST+HarvestRain+WinterRain+Age+FrancePop, data = wine)
summary(model3)
model01 = lm(Price ~ HarvestRain+WinterRain, data = wine)
summary(model01)
model4 = lm(Price ~ AGST+HarvestRain+WinterRain+Age)
model4 = lm(Price ~ AGST+HarvestRain+WinterRain+Age, data=wine)
summary(model4)
cor(wine$WinterRain,wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
model5=lm(Price~AGST+HarvestRain+WinterR
model5=lm(Price~AGST+HarvestRain+WinterRain,data = wine)
summary(model5)
cor(wine)
summary(model01)
summary(model4)
wineTest = read.csv("wine_test.csv")
str(wineTest)
predictTest = predict(model4,newdata = wineTest)
predictTest
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1- SSE/SST
ls
baseball = read.csv("baseball.csv")
str(baseball)
moneyball = subset(baseball, Year<2002)
str(moneyball)
moneyball$RD = moneyball$RS - moneyball$RA
str(moneyball)
WinsReg = lm(W~RD,data = moneyball)
summary(WinsReg)
713-614
80.8814+(0.105766*99)
